name: 'Go Feature Flag Lint Action' # name of the action
description: 'Lint Go Feature Flag config stored in a repo' # description of the action

inputs: # inputs of the action used as `args` in `lint`
  flagFilePath:  # path to the flag file
    description: 'Absolute or relative path to the flag file'
    required: false
    default: './config/flags.yaml' # default path is './config/flags.yaml
  flagFiletype: # filetype of the flag file can be yaml, toml, or json
    description: 'Filetype of the flag file'
    required: false 
    default: 'yaml' # default file format is yaml

outputs:
  lintMessage: # output of the linting step
    description: "Reads the result of the linting step"
    value: ${{ steps.lint.outputs.lint-message }} # output of the linting step

runs:
  using: "composite"
  steps:
    ## Add the path to the action to the $PATH, as it will be able to 
    ## run the linter script directly in next step
    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash
    
    ## run the linter script and capture the output
    - id: lint
      run: run-lint.sh ${{ inputs.flagFilePath }} ${{ inputs.flagFiletype }}
      shell: bash
